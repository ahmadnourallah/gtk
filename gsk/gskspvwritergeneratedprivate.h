/* GTK - The GIMP Toolkit
 *   
 * Copyright Â© 2017 Benjamin Otte <otte@gnome.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * !!! THIS FILE WAS AUTOGENERATED !!!
 * 
 * This file was created using the command
 *   gjs spirv.js functions spirv.core.grammar.json
 * Apply any changes to those files and then regenerate using above command.
 */

#include <string.h>

static inline void
append_string (GArray     *bytes,
               const char *str)
{
  gsize len = strlen (str);
  guint size = bytes->len;
  g_array_set_size (bytes, size + len / 4 + 1);
  memcpy (&g_array_index (bytes, guint32, size), str, len);
}

static inline void
gsk_spv_writer_nop (GskSpvWriter *writer,
                    GskSpvWriterSection section)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_NOP;
}

static inline guint32
gsk_spv_writer_undef (GskSpvWriter *writer,
                      GskSpvWriterSection section,
                      GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_UNDEF;

  return result_id;
}

static inline void
gsk_spv_writer_source_continued (GskSpvWriter *writer,
                                 GskSpvWriterSection section,
                                 const char *continued_source)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  append_string (bytes, continued_source);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SOURCE_CONTINUED;
}

static inline void
gsk_spv_writer_source (GskSpvWriter *writer,
                       GskSpvSourceLanguage source_language,
                       guint32 version,
                       guint32 opt_file,
                       const char *opt_source)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEBUG);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, (guint32) { source_language });
  g_array_append_val (bytes, version);
  if (opt_file != 0)
    g_array_append_val (bytes, opt_file);
  if (opt_source != NULL)
    append_string (bytes, opt_source);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SOURCE;
}

static inline void
gsk_spv_writer_source_extension (GskSpvWriter *writer,
                                 const char *extension)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEBUG);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  append_string (bytes, extension);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SOURCE_EXTENSION;
}

static inline void
gsk_spv_writer_name (GskSpvWriter *writer,
                     guint32 target,
                     const char *name)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEBUG);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, target);
  append_string (bytes, name);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_NAME;
}

static inline void
gsk_spv_writer_member_name (GskSpvWriter *writer,
                            guint32 type,
                            guint32 member,
                            const char *name)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEBUG);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, type);
  g_array_append_val (bytes, member);
  append_string (bytes, name);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MEMBER_NAME;
}

static inline guint32
gsk_spv_writer_string (GskSpvWriter *writer,
                       GskSpvWriterSection section,
                       const char *string)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  append_string (bytes, string);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_STRING;

  return result_id;
}

static inline void
gsk_spv_writer_line (GskSpvWriter *writer,
                     GskSpvWriterSection section,
                     guint32 file,
                     guint32 line,
                     guint32 column)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, file);
  g_array_append_val (bytes, line);
  g_array_append_val (bytes, column);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LINE;
}

static inline void
gsk_spv_writer_extension (GskSpvWriter *writer,
                          const char *name)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  append_string (bytes, name);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EXTENSION;
}

static inline guint32
gsk_spv_writer_ext_inst_import (GskSpvWriter *writer,
                                const char *name)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  append_string (bytes, name);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EXT_INST_IMPORT;

  return result_id;
}

static inline guint32
gsk_spv_writer_ext_inst (GskSpvWriter *writer,
                         GskSpvWriterSection section,
                         GskSlType *result_type,
                         guint32 set,
                         guint32 instruction,
                         guint32 *operands,
                         gsize n_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, set);
  g_array_append_val (bytes, instruction);
  g_array_append_vals (bytes, operands, n_operands);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EXT_INST;

  return result_id;
}

static inline void
gsk_spv_writer_memory_model (GskSpvWriter *writer,
                             GskSpvAddressingModel addressing_model,
                             GskSpvMemoryModel memory_model)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, (guint32) { addressing_model });
  g_array_append_val (bytes, (guint32) { memory_model });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MEMORY_MODEL;
}

static inline void
gsk_spv_writer_entry_point (GskSpvWriter *writer,
                            GskSpvExecutionModel execution_model,
                            guint32 entry_point,
                            const char *name,
                            guint32 *interfaces,
                            gsize n_interfaces)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, (guint32) { execution_model });
  g_array_append_val (bytes, entry_point);
  append_string (bytes, name);
  g_array_append_vals (bytes, interfaces, n_interfaces);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ENTRY_POINT;
}

static inline void
gsk_spv_writer_execution_mode (GskSpvWriter *writer,
                               guint32 entry_point,
                               GskSpvExecutionMode mode)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, entry_point);
  g_array_append_val (bytes, (guint32) { mode });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EXECUTION_MODE;
}

static inline void
gsk_spv_writer_capability (GskSpvWriter *writer,
                           GskSpvCapability capability)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_HEADER);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, (guint32) { capability });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CAPABILITY;
}

static inline guint32
gsk_spv_writer_type_void (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_VOID;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_bool (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_BOOL;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_int (GskSpvWriter *writer,
                         guint32 width,
                         guint32 signedness)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, width);
  g_array_append_val (bytes, signedness);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_INT;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_float (GskSpvWriter *writer,
                           guint32 width)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, width);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_FLOAT;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_vector (GskSpvWriter *writer,
                            guint32 component_type,
                            guint32 component_count)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, component_type);
  g_array_append_val (bytes, component_count);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_VECTOR;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_matrix (GskSpvWriter *writer,
                            guint32 column_type,
                            guint32 column_count)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, column_type);
  g_array_append_val (bytes, column_count);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_MATRIX;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_image (GskSpvWriter *writer,
                           guint32 sampled_type,
                           GskSpvDim dim,
                           guint32 depth,
                           guint32 arrayed,
                           guint32 ms,
                           guint32 sampled,
                           GskSpvImageFormat image_format,
                           GskSpvAccessQualifier opt_access_qualifier)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_type);
  g_array_append_val (bytes, (guint32) { dim });
  g_array_append_val (bytes, depth);
  g_array_append_val (bytes, arrayed);
  g_array_append_val (bytes, ms);
  g_array_append_val (bytes, sampled);
  g_array_append_val (bytes, (guint32) { image_format });
  g_array_append_val (bytes, (guint32) { opt_access_qualifier });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_IMAGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_sampler (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_SAMPLER;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_sampled_image (GskSpvWriter *writer,
                                   guint32 image_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image_type);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_SAMPLED_IMAGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_array (GskSpvWriter *writer,
                           guint32 element_type,
                           guint32 length)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, element_type);
  g_array_append_val (bytes, length);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_ARRAY;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_runtime_array (GskSpvWriter *writer,
                                   guint32 element_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, element_type);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_RUNTIME_ARRAY;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_struct (GskSpvWriter *writer,
                            guint32 *member_0_types,
                            gsize n_member_0_types)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, member_0_types, n_member_0_types);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_STRUCT;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_opaque (GskSpvWriter *writer,
                            const char *name)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  append_string (bytes, name);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_OPAQUE;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_pointer (GskSpvWriter *writer,
                             GskSpvStorageClass storage_class,
                             guint32 type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, (guint32) { storage_class });
  g_array_append_val (bytes, type);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_POINTER;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_function (GskSpvWriter *writer,
                              guint32 return_type,
                              guint32 *parameter_0_types,
                              gsize n_parameter_0_types)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, return_type);
  g_array_append_vals (bytes, parameter_0_types, n_parameter_0_types);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_FUNCTION;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_event (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_EVENT;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_device_event (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_DEVICE_EVENT;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_reserve_id (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_RESERVE_ID;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_queue (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_QUEUE;

  return result_id;
}

static inline guint32
gsk_spv_writer_type_pipe (GskSpvWriter *writer,
                          GskSpvAccessQualifier qualifier)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, (guint32) { qualifier });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_PIPE;

  return result_id;
}

static inline void
gsk_spv_writer_type_forward_pointer (GskSpvWriter *writer,
                                     guint32 pointer_type,
                                     GskSpvStorageClass storage_class)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer_type);
  g_array_append_val (bytes, (guint32) { storage_class });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TYPE_FORWARD_POINTER;
}

static inline guint32
gsk_spv_writer_constant_true (GskSpvWriter *writer,
                              GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT_TRUE;

  return result_id;
}

static inline guint32
gsk_spv_writer_constant_false (GskSpvWriter *writer,
                               GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT_FALSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_constant (GskSpvWriter *writer,
                         GskSlType *result_type,
                         guint32 *values,
                         gsize n_values)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, values, n_values);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT;

  return result_id;
}

static inline guint32
gsk_spv_writer_constant_composite (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 *constituents,
                                   gsize n_constituents)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, constituents, n_constituents);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT_COMPOSITE;

  return result_id;
}

static inline guint32
gsk_spv_writer_constant_sampler (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 GskSpvSamplerAddressingMode sampler_addressing_mode,
                                 guint32 param,
                                 GskSpvSamplerFilterMode sampler_filter_mode)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, (guint32) { sampler_addressing_mode });
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, (guint32) { sampler_filter_mode });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT_SAMPLER;

  return result_id;
}

static inline guint32
gsk_spv_writer_constant_null (GskSpvWriter *writer,
                              GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONSTANT_NULL;

  return result_id;
}

static inline guint32
gsk_spv_writer_spec_constant_true (GskSpvWriter *writer,
                                   GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SPEC_CONSTANT_TRUE;

  return result_id;
}

static inline guint32
gsk_spv_writer_spec_constant_false (GskSpvWriter *writer,
                                    GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SPEC_CONSTANT_FALSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_spec_constant (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 *values,
                              gsize n_values)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, values, n_values);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SPEC_CONSTANT;

  return result_id;
}

static inline guint32
gsk_spv_writer_spec_constant_composite (GskSpvWriter *writer,
                                        GskSlType *result_type,
                                        guint32 *constituents,
                                        gsize n_constituents)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, constituents, n_constituents);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SPEC_CONSTANT_COMPOSITE;

  return result_id;
}

static inline guint32
gsk_spv_writer_spec_constant_op (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 *opcodes,
                                 gsize n_opcodes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DEFINE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, opcodes, n_opcodes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SPEC_CONSTANT_OP;

  return result_id;
}

static inline guint32
gsk_spv_writer_function (GskSpvWriter *writer,
                         GskSlType *result_type,
                         GskSpvFunctionControl function_control,
                         guint32 function_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECLARE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, (guint32) { function_control });
  g_array_append_val (bytes, function_type);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FUNCTION;

  return result_id;
}

static inline guint32
gsk_spv_writer_function_parameter (GskSpvWriter *writer,
                                   GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECLARE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FUNCTION_PARAMETER;

  return result_id;
}

static inline void
gsk_spv_writer_function_end (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FUNCTION_END;
}

static inline guint32
gsk_spv_writer_function_call (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 function,
                              guint32 *argument_0s,
                              gsize n_argument_0s)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, function);
  g_array_append_vals (bytes, argument_0s, n_argument_0s);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FUNCTION_CALL;

  return result_id;
}

static inline guint32
gsk_spv_writer_variable (GskSpvWriter *writer,
                         GskSpvWriterSection section,
                         GskSlType *result_type, GskSpvStorageClass result_type_storage,
                         GskSpvStorageClass storage_class,
                         guint32 opt_initializer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, (guint32) { storage_class });
  if (opt_initializer != 0)
    g_array_append_val (bytes, opt_initializer);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VARIABLE;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_texel_pointer (GskSpvWriter *writer,
                                    GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                    guint32 image,
                                    guint32 coordinate,
                                    guint32 sample)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, sample);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_TEXEL_POINTER;

  return result_id;
}

static inline guint32
gsk_spv_writer_load (GskSpvWriter *writer,
                     GskSlType *result_type,
                     guint32 pointer,
                     GskSpvMemoryAccess opt_memory_access)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  if (opt_memory_access != 0)
    g_array_append_val (bytes, (guint32) { opt_memory_access });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOAD;

  return result_id;
}

static inline void
gsk_spv_writer_store (GskSpvWriter *writer,
                      guint32 pointer,
                      guint32 object,
                      GskSpvMemoryAccess opt_memory_access)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, object);
  if (opt_memory_access != 0)
    g_array_append_val (bytes, (guint32) { opt_memory_access });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_STORE;
}

static inline void
gsk_spv_writer_copy_memory (GskSpvWriter *writer,
                            guint32 target,
                            guint32 source,
                            GskSpvMemoryAccess opt_memory_access)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, target);
  g_array_append_val (bytes, source);
  if (opt_memory_access != 0)
    g_array_append_val (bytes, (guint32) { opt_memory_access });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COPY_MEMORY;
}

static inline void
gsk_spv_writer_copy_memory_sized (GskSpvWriter *writer,
                                  guint32 target,
                                  guint32 source,
                                  guint32 size,
                                  GskSpvMemoryAccess opt_memory_access)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, target);
  g_array_append_val (bytes, source);
  g_array_append_val (bytes, size);
  if (opt_memory_access != 0)
    g_array_append_val (bytes, (guint32) { opt_memory_access });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COPY_MEMORY_SIZED;
}

static inline guint32
gsk_spv_writer_access_chain (GskSpvWriter *writer,
                             GskSlType *result_type, GskSpvStorageClass result_type_storage,
                             guint32 base,
                             guint32 *indexes,
                             gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ACCESS_CHAIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_in_bounds_access_chain (GskSpvWriter *writer,
                                       GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                       guint32 base,
                                       guint32 *indexes,
                                       gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IN_BOUNDS_ACCESS_CHAIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_ptr_access_chain (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 base,
                                 guint32 element,
                                 guint32 *indexes,
                                 gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, element);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_PTR_ACCESS_CHAIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_array_length (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 structure,
                             guint32 array_member)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, structure);
  g_array_append_val (bytes, array_member);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ARRAY_LENGTH;

  return result_id;
}

static inline guint32
gsk_spv_writer_generic_ptr_mem_semantics (GskSpvWriter *writer,
                                          GskSpvWriterSection section,
                                          GskSlType *result_type,
                                          guint32 pointer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GENERIC_PTR_MEM_SEMANTICS;

  return result_id;
}

static inline guint32
gsk_spv_writer_in_bounds_ptr_access_chain (GskSpvWriter *writer,
                                           GskSlType *result_type,
                                           guint32 base,
                                           guint32 element,
                                           guint32 *indexes,
                                           gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, element);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IN_BOUNDS_PTR_ACCESS_CHAIN;

  return result_id;
}

static inline void
gsk_spv_writer_decorate (GskSpvWriter *writer,
                         guint32 target,
                         GskSpvDecoration decoration)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECORATE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, target);
  g_array_append_val (bytes, (guint32) { decoration });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_DECORATE;
}

static inline void
gsk_spv_writer_member_decorate (GskSpvWriter *writer,
                                guint32 structure_type,
                                guint32 member,
                                GskSpvDecoration decoration)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECORATE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, structure_type);
  g_array_append_val (bytes, member);
  g_array_append_val (bytes, (guint32) { decoration });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MEMBER_DECORATE;
}

static inline guint32
gsk_spv_writer_decoration_group (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECORATE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_DECORATION_GROUP;

  return result_id;
}

static inline void
gsk_spv_writer_group_decorate (GskSpvWriter *writer,
                               guint32 decoration_group,
                               guint32 *targets,
                               gsize n_targets)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECORATE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, decoration_group);
  g_array_append_vals (bytes, targets, n_targets);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_DECORATE;
}

static inline void
gsk_spv_writer_group_member_decorate (GskSpvWriter *writer,
                                      guint32 decoration_group,
                                      guint32 *targets[2],
                                      gsize n_targets)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_DECORATE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, decoration_group);
  g_array_append_vals (bytes, targets, 2 * n_targets);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_MEMBER_DECORATE;
}

static inline guint32
gsk_spv_writer_vector_extract_dynamic (GskSpvWriter *writer,
                                       GskSlType *result_type,
                                       guint32 vector,
                                       guint32 index)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_append_val (bytes, index);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VECTOR_EXTRACT_DYNAMIC;

  return result_id;
}

static inline guint32
gsk_spv_writer_vector_insert_dynamic (GskSpvWriter *writer,
                                      GskSlType *result_type,
                                      guint32 vector,
                                      guint32 component,
                                      guint32 index)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_append_val (bytes, component);
  g_array_append_val (bytes, index);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VECTOR_INSERT_DYNAMIC;

  return result_id;
}

static inline guint32
gsk_spv_writer_vector_shuffle (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 vector_1,
                               guint32 vector_2,
                               guint32 *components,
                               gsize n_components)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector_1);
  g_array_append_val (bytes, vector_2);
  g_array_append_vals (bytes, components, n_components);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VECTOR_SHUFFLE;

  return result_id;
}

static inline guint32
gsk_spv_writer_composite_construct (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 *constituents,
                                    gsize n_constituents)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, constituents, n_constituents);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COMPOSITE_CONSTRUCT;

  return result_id;
}

static inline guint32
gsk_spv_writer_composite_extract (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 composite,
                                  guint32 *indexes,
                                  gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, composite);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COMPOSITE_EXTRACT;

  return result_id;
}

static inline guint32
gsk_spv_writer_composite_insert (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 object,
                                 guint32 composite,
                                 guint32 *indexes,
                                 gsize n_indexes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, object);
  g_array_append_val (bytes, composite);
  g_array_append_vals (bytes, indexes, n_indexes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COMPOSITE_INSERT;

  return result_id;
}

static inline guint32
gsk_spv_writer_copy_object (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COPY_OBJECT;

  return result_id;
}

static inline guint32
gsk_spv_writer_transpose (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 matrix)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, matrix);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_TRANSPOSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_sampled_image (GskSpvWriter *writer,
                              GskSpvWriterSection section,
                              GskSlType *result_type,
                              guint32 image,
                              guint32 sampler)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, sampler);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SAMPLED_IMAGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_implicit_lod (GskSpvWriter *writer,
                                          GskSlType *result_type,
                                          guint32 sampled_image,
                                          guint32 coordinate,
                                          GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_explicit_lod (GskSpvWriter *writer,
                                          GskSlType *result_type,
                                          guint32 sampled_image,
                                          guint32 coordinate,
                                          GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_dref_implicit_lod (GskSpvWriter *writer,
                                               GskSlType *result_type,
                                               guint32 sampled_image,
                                               guint32 coordinate,
                                               guint32 d_ref_,
                                               GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_DREF_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_dref_explicit_lod (GskSpvWriter *writer,
                                               GskSlType *result_type,
                                               guint32 sampled_image,
                                               guint32 coordinate,
                                               guint32 d_ref_,
                                               GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_DREF_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_proj_implicit_lod (GskSpvWriter *writer,
                                               GskSlType *result_type,
                                               guint32 sampled_image,
                                               guint32 coordinate,
                                               GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_PROJ_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_proj_explicit_lod (GskSpvWriter *writer,
                                               GskSlType *result_type,
                                               guint32 sampled_image,
                                               guint32 coordinate,
                                               GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_PROJ_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_proj_dref_implicit_lod (GskSpvWriter *writer,
                                                    GskSlType *result_type,
                                                    guint32 sampled_image,
                                                    guint32 coordinate,
                                                    guint32 d_ref_,
                                                    GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_PROJ_DREF_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sample_proj_dref_explicit_lod (GskSpvWriter *writer,
                                                    GskSlType *result_type,
                                                    guint32 sampled_image,
                                                    guint32 coordinate,
                                                    guint32 d_ref_,
                                                    GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SAMPLE_PROJ_DREF_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_fetch (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 image,
                            guint32 coordinate,
                            GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_FETCH;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_gather (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 sampled_image,
                             guint32 coordinate,
                             guint32 component,
                             GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, component);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_GATHER;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_dref_gather (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 sampled_image,
                                  guint32 coordinate,
                                  guint32 d_ref_,
                                  GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_DREF_GATHER;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_read (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 image,
                           guint32 coordinate,
                           GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_READ;

  return result_id;
}

static inline void
gsk_spv_writer_image_write (GskSpvWriter *writer,
                            guint32 image,
                            guint32 coordinate,
                            guint32 texel,
                            GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, texel);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_WRITE;
}

static inline guint32
gsk_spv_writer_image (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 sampled_image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_format (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_FORMAT;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_order (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_ORDER;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_size_lod (GskSpvWriter *writer,
                                     GskSlType *result_type,
                                     guint32 image,
                                     guint32 level_of_detail)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, level_of_detail);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_SIZE_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_size (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_SIZE;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_lod (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 sampled_image,
                                guint32 coordinate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_levels (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_LEVELS;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_query_samples (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 image)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_QUERY_SAMPLES;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_f_to_u (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 float_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, float_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_F_TO_U;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_f_to_s (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 float_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, float_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_F_TO_S;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_s_to_f (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 signed_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, signed_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_S_TO_F;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_u_to_f (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 unsigned_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, unsigned_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_U_TO_F;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_convert (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 unsigned_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, unsigned_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_CONVERT;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_convert (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 signed_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, signed_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_CONVERT;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_convert (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 float_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, float_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_CONVERT;

  return result_id;
}

static inline guint32
gsk_spv_writer_quantize_to_f16 (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_QUANTIZE_TO_F16;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_ptr_to_u (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 pointer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_PTR_TO_U;

  return result_id;
}

static inline guint32
gsk_spv_writer_sat_convert_s_to_u (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 signed_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, signed_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SAT_CONVERT_S_TO_U;

  return result_id;
}

static inline guint32
gsk_spv_writer_sat_convert_u_to_s (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 unsigned_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, unsigned_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SAT_CONVERT_U_TO_S;

  return result_id;
}

static inline guint32
gsk_spv_writer_convert_u_to_ptr (GskSpvWriter *writer,
                                 GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                 guint32 integer_value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, integer_value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONVERT_U_TO_PTR;

  return result_id;
}

static inline guint32
gsk_spv_writer_ptr_cast_to_generic (GskSpvWriter *writer,
                                    GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                    guint32 pointer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_PTR_CAST_TO_GENERIC;

  return result_id;
}

static inline guint32
gsk_spv_writer_generic_cast_to_ptr (GskSpvWriter *writer,
                                    GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                    guint32 pointer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GENERIC_CAST_TO_PTR;

  return result_id;
}

static inline guint32
gsk_spv_writer_generic_cast_to_ptr_explicit (GskSpvWriter *writer,
                                             GskSlType *result_type, GskSpvStorageClass result_type_storage,
                                             guint32 pointer,
                                             GskSpvStorageClass storage)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_pointer_type (writer, result_type, result_type_storage);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, (guint32) { storage });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GENERIC_CAST_TO_PTR_EXPLICIT;

  return result_id;
}

static inline guint32
gsk_spv_writer_bitcast (GskSpvWriter *writer,
                        GskSlType *result_type,
                        guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BITCAST;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_negate (GskSpvWriter *writer,
                         GskSlType *result_type,
                         guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_NEGATE;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_negate (GskSpvWriter *writer,
                         GskSlType *result_type,
                         guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_NEGATE;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_add (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_ADD;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_add (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ADD;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_sub (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_SUB;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_sub (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_SUB;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_mul (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_MUL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_mul (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_MUL;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_div (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_DIV;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_div (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_DIV;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_div (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_DIV;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_mod (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_MOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_rem (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_REM;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_mod (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_MOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_rem (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_REM;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_mod (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 operand_1,
                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_MOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_vector_times_scalar (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 vector,
                                    guint32 scalar)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_append_val (bytes, scalar);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VECTOR_TIMES_SCALAR;

  return result_id;
}

static inline guint32
gsk_spv_writer_matrix_times_scalar (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 matrix,
                                    guint32 scalar)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, matrix);
  g_array_append_val (bytes, scalar);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MATRIX_TIMES_SCALAR;

  return result_id;
}

static inline guint32
gsk_spv_writer_vector_times_matrix (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 vector,
                                    guint32 matrix)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_append_val (bytes, matrix);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_VECTOR_TIMES_MATRIX;

  return result_id;
}

static inline guint32
gsk_spv_writer_matrix_times_vector (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 matrix,
                                    guint32 vector)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, matrix);
  g_array_append_val (bytes, vector);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MATRIX_TIMES_VECTOR;

  return result_id;
}

static inline guint32
gsk_spv_writer_matrix_times_matrix (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 left_matrix,
                                    guint32 right_matrix)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, left_matrix);
  g_array_append_val (bytes, right_matrix);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MATRIX_TIMES_MATRIX;

  return result_id;
}

static inline guint32
gsk_spv_writer_outer_product (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 vector_1,
                              guint32 vector_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector_1);
  g_array_append_val (bytes, vector_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_OUTER_PRODUCT;

  return result_id;
}

static inline guint32
gsk_spv_writer_dot (GskSpvWriter *writer,
                    GskSlType *result_type,
                    guint32 vector_1,
                    guint32 vector_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector_1);
  g_array_append_val (bytes, vector_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_DOT;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_add_carry (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_ADD_CARRY;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_sub_borrow (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 operand_1,
                             guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_SUB_BORROW;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_mul_extended (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 operand_1,
                               guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_MUL_EXTENDED;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_mul_extended (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 operand_1,
                               guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_MUL_EXTENDED;

  return result_id;
}

static inline guint32
gsk_spv_writer_any (GskSpvWriter *writer,
                    GskSlType *result_type,
                    guint32 vector)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ANY;

  return result_id;
}

static inline guint32
gsk_spv_writer_all (GskSpvWriter *writer,
                    GskSlType *result_type,
                    guint32 vector)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, vector);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ALL;

  return result_id;
}

static inline guint32
gsk_spv_writer_is_nan (GskSpvWriter *writer,
                       GskSlType *result_type,
                       guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_NAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_is_inf (GskSpvWriter *writer,
                       GskSlType *result_type,
                       guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_INF;

  return result_id;
}

static inline guint32
gsk_spv_writer_is_finite (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_FINITE;

  return result_id;
}

static inline guint32
gsk_spv_writer_is_normal (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_NORMAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_sign_bit_set (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SIGN_BIT_SET;

  return result_id;
}

static inline guint32
gsk_spv_writer_less_or_greater (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 x,
                                guint32 y)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_append_val (bytes, y);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LESS_OR_GREATER;

  return result_id;
}

static inline guint32
gsk_spv_writer_ordered (GskSpvWriter *writer,
                        GskSlType *result_type,
                        guint32 x,
                        guint32 y)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_append_val (bytes, y);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ORDERED;

  return result_id;
}

static inline guint32
gsk_spv_writer_unordered (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 x,
                          guint32 y)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, x);
  g_array_append_val (bytes, y);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_UNORDERED;

  return result_id;
}

static inline guint32
gsk_spv_writer_logical_equal (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 operand_1,
                              guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOGICAL_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_logical_not_equal (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 operand_1,
                                  guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOGICAL_NOT_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_logical_or (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 operand_1,
                           guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOGICAL_OR;

  return result_id;
}

static inline guint32
gsk_spv_writer_logical_and (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOGICAL_AND;

  return result_id;
}

static inline guint32
gsk_spv_writer_logical_not (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOGICAL_NOT;

  return result_id;
}

static inline guint32
gsk_spv_writer_select (GskSpvWriter *writer,
                       GskSlType *result_type,
                       guint32 condition,
                       guint32 object_1,
                       guint32 object_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, condition);
  g_array_append_val (bytes, object_1);
  g_array_append_val (bytes, object_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SELECT;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_equal (GskSpvWriter *writer,
                        GskSlType *result_type,
                        guint32 operand_1,
                        guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_i_not_equal (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_I_NOT_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_greater_than (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 operand_1,
                               guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_GREATER_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_greater_than (GskSpvWriter *writer,
                               GskSlType *result_type,
                               guint32 operand_1,
                               guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_GREATER_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_greater_than_equal (GskSpvWriter *writer,
                                     GskSlType *result_type,
                                     guint32 operand_1,
                                     guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_GREATER_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_greater_than_equal (GskSpvWriter *writer,
                                     GskSlType *result_type,
                                     guint32 operand_1,
                                     guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_GREATER_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_less_than (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_LESS_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_less_than (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_LESS_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_u_less_than_equal (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 operand_1,
                                  guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_U_LESS_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_s_less_than_equal (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 operand_1,
                                  guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_S_LESS_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_equal (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_equal (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 operand_1,
                              guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_not_equal (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 operand_1,
                                guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_NOT_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_not_equal (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 operand_1,
                                  guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_NOT_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_less_than (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 operand_1,
                                guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_LESS_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_less_than (GskSpvWriter *writer,
                                  GskSlType *result_type,
                                  guint32 operand_1,
                                  guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_LESS_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_greater_than (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 operand_1,
                                   guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_GREATER_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_greater_than (GskSpvWriter *writer,
                                     GskSlType *result_type,
                                     guint32 operand_1,
                                     guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_GREATER_THAN;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_less_than_equal (GskSpvWriter *writer,
                                      GskSlType *result_type,
                                      guint32 operand_1,
                                      guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_LESS_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_less_than_equal (GskSpvWriter *writer,
                                        GskSlType *result_type,
                                        guint32 operand_1,
                                        guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_LESS_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_ord_greater_than_equal (GskSpvWriter *writer,
                                         GskSlType *result_type,
                                         guint32 operand_1,
                                         guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_ORD_GREATER_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_f_unord_greater_than_equal (GskSpvWriter *writer,
                                           GskSlType *result_type,
                                           guint32 operand_1,
                                           guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_F_UNORD_GREATER_THAN_EQUAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_shift_right_logical (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 base,
                                    guint32 shift)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, shift);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SHIFT_RIGHT_LOGICAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_shift_right_arithmetic (GskSpvWriter *writer,
                                       GskSlType *result_type,
                                       guint32 base,
                                       guint32 shift)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, shift);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SHIFT_RIGHT_ARITHMETIC;

  return result_id;
}

static inline guint32
gsk_spv_writer_shift_left_logical (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 base,
                                   guint32 shift)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, shift);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SHIFT_LEFT_LOGICAL;

  return result_id;
}

static inline guint32
gsk_spv_writer_bitwise_or (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 operand_1,
                           guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BITWISE_OR;

  return result_id;
}

static inline guint32
gsk_spv_writer_bitwise_xor (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BITWISE_XOR;

  return result_id;
}

static inline guint32
gsk_spv_writer_bitwise_and (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 operand_1,
                            guint32 operand_2)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand_1);
  g_array_append_val (bytes, operand_2);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BITWISE_AND;

  return result_id;
}

static inline guint32
gsk_spv_writer_not (GskSpvWriter *writer,
                    GskSlType *result_type,
                    guint32 operand)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, operand);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_NOT;

  return result_id;
}

static inline guint32
gsk_spv_writer_bit_field_insert (GskSpvWriter *writer,
                                 GskSlType *result_type,
                                 guint32 base,
                                 guint32 insert,
                                 guint32 offset,
                                 guint32 count)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, insert);
  g_array_append_val (bytes, offset);
  g_array_append_val (bytes, count);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BIT_FIELD_INSERT;

  return result_id;
}

static inline guint32
gsk_spv_writer_bit_field_s_extract (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 base,
                                    guint32 offset,
                                    guint32 count)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, offset);
  g_array_append_val (bytes, count);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BIT_FIELD_S_EXTRACT;

  return result_id;
}

static inline guint32
gsk_spv_writer_bit_field_u_extract (GskSpvWriter *writer,
                                    GskSlType *result_type,
                                    guint32 base,
                                    guint32 offset,
                                    guint32 count)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_append_val (bytes, offset);
  g_array_append_val (bytes, count);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BIT_FIELD_U_EXTRACT;

  return result_id;
}

static inline guint32
gsk_spv_writer_bit_reverse (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 base)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BIT_REVERSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_bit_count (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 base)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, base);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BIT_COUNT;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdx (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDX;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdy (GskSpvWriter *writer,
                      GskSlType *result_type,
                      guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDY;

  return result_id;
}

static inline guint32
gsk_spv_writer_fwidth (GskSpvWriter *writer,
                       GskSlType *result_type,
                       guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FWIDTH;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdx_fine (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDX_FINE;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdy_fine (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDY_FINE;

  return result_id;
}

static inline guint32
gsk_spv_writer_fwidth_fine (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FWIDTH_FINE;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdx_coarse (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDX_COARSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_d_pdy_coarse (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_D_PDY_COARSE;

  return result_id;
}

static inline guint32
gsk_spv_writer_fwidth_coarse (GskSpvWriter *writer,
                              GskSlType *result_type,
                              guint32 p)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, p);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FWIDTH_COARSE;

  return result_id;
}

static inline void
gsk_spv_writer_emit_vertex (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EMIT_VERTEX;
}

static inline void
gsk_spv_writer_end_primitive (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_END_PRIMITIVE;
}

static inline void
gsk_spv_writer_emit_stream_vertex (GskSpvWriter *writer,
                                   guint32 stream)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, stream);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_EMIT_STREAM_VERTEX;
}

static inline void
gsk_spv_writer_end_stream_primitive (GskSpvWriter *writer,
                                     guint32 stream)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, stream);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_END_STREAM_PRIMITIVE;
}

static inline void
gsk_spv_writer_control_barrier (GskSpvWriter *writer,
                                guint32 execution,
                                guint32 memory,
                                guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, memory);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CONTROL_BARRIER;
}

static inline void
gsk_spv_writer_memory_barrier (GskSpvWriter *writer,
                               guint32 memory,
                               guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, memory);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_MEMORY_BARRIER;
}

static inline guint32
gsk_spv_writer_atomic_load (GskSpvWriter *writer,
                            GskSlType *result_type,
                            guint32 pointer,
                            guint32 scope,
                            guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_LOAD;

  return result_id;
}

static inline void
gsk_spv_writer_atomic_store (GskSpvWriter *writer,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_STORE;
}

static inline guint32
gsk_spv_writer_atomic_exchange (GskSpvWriter *writer,
                                GskSlType *result_type,
                                guint32 pointer,
                                guint32 scope,
                                guint32 semantics,
                                guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_EXCHANGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_compare_exchange (GskSpvWriter *writer,
                                        GskSlType *result_type,
                                        guint32 pointer,
                                        guint32 scope,
                                        guint32 equal,
                                        guint32 unequal,
                                        guint32 value,
                                        guint32 comparator)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, equal);
  g_array_append_val (bytes, unequal);
  g_array_append_val (bytes, value);
  g_array_append_val (bytes, comparator);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_COMPARE_EXCHANGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_compare_exchange_weak (GskSpvWriter *writer,
                                             GskSlType *result_type,
                                             guint32 pointer,
                                             guint32 scope,
                                             guint32 equal,
                                             guint32 unequal,
                                             guint32 value,
                                             guint32 comparator)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, equal);
  g_array_append_val (bytes, unequal);
  g_array_append_val (bytes, value);
  g_array_append_val (bytes, comparator);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_COMPARE_EXCHANGE_WEAK;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_i_increment (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 pointer,
                                   guint32 scope,
                                   guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_I_INCREMENT;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_i_decrement (GskSpvWriter *writer,
                                   GskSlType *result_type,
                                   guint32 pointer,
                                   guint32 scope,
                                   guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_I_DECREMENT;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_i_add (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_I_ADD;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_i_sub (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_I_SUB;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_s_min (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_S_MIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_u_min (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_U_MIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_s_max (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_S_MAX;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_u_max (GskSpvWriter *writer,
                             GskSlType *result_type,
                             guint32 pointer,
                             guint32 scope,
                             guint32 semantics,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_U_MAX;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_and (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 pointer,
                           guint32 scope,
                           guint32 semantics,
                           guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_AND;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_or (GskSpvWriter *writer,
                          GskSlType *result_type,
                          guint32 pointer,
                          guint32 scope,
                          guint32 semantics,
                          guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_OR;

  return result_id;
}

static inline guint32
gsk_spv_writer_atomic_xor (GskSpvWriter *writer,
                           GskSlType *result_type,
                           guint32 pointer,
                           guint32 scope,
                           guint32 semantics,
                           guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_XOR;

  return result_id;
}

static inline guint32
gsk_spv_writer_phi (GskSpvWriter *writer,
                    GskSlType *result_type,
                    guint32 *variable__parent_____s[2],
                    gsize n_variable__parent_____s)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_vals (bytes, variable__parent_____s, 2 * n_variable__parent_____s);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_PHI;

  return result_id;
}

static inline void
gsk_spv_writer_loop_merge (GskSpvWriter *writer,
                           guint32 merge_block,
                           guint32 continue_target,
                           GskSpvLoopControl loop_control)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, merge_block);
  g_array_append_val (bytes, continue_target);
  g_array_append_val (bytes, (guint32) { loop_control });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LOOP_MERGE;
}

static inline void
gsk_spv_writer_selection_merge (GskSpvWriter *writer,
                                guint32 merge_block,
                                GskSpvSelectionControl selection_control)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, merge_block);
  g_array_append_val (bytes, (guint32) { selection_control });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SELECTION_MERGE;
}

static inline guint32
gsk_spv_writer_label (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LABEL;

  return result_id;
}

static inline void
gsk_spv_writer_branch (GskSpvWriter *writer,
                       guint32 target_label)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, target_label);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BRANCH;
}

static inline void
gsk_spv_writer_branch_conditional (GskSpvWriter *writer,
                                   guint32 condition,
                                   guint32 true_label,
                                   guint32 false_label,
                                   guint32 *branch_weights,
                                   gsize n_branch_weights)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, condition);
  g_array_append_val (bytes, true_label);
  g_array_append_val (bytes, false_label);
  g_array_append_vals (bytes, branch_weights, n_branch_weights);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BRANCH_CONDITIONAL;
}

static inline void
gsk_spv_writer_switch (GskSpvWriter *writer,
                       guint32 selector,
                       guint32 default_,
                       guint32 *targets[2],
                       gsize n_targets)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, selector);
  g_array_append_val (bytes, default_);
  g_array_append_vals (bytes, targets, 2 * n_targets);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SWITCH;
}

static inline void
gsk_spv_writer_kill (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_KILL;
}

static inline void
gsk_spv_writer_return (GskSpvWriter *writer)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RETURN;
}

static inline void
gsk_spv_writer_return_value (GskSpvWriter *writer,
                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, GSK_SPV_WRITER_SECTION_CODE);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RETURN_VALUE;
}

static inline void
gsk_spv_writer_unreachable (GskSpvWriter *writer,
                            GskSpvWriterSection section)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_UNREACHABLE;
}

static inline void
gsk_spv_writer_lifetime_start (GskSpvWriter *writer,
                               GskSpvWriterSection section,
                               guint32 pointer,
                               guint32 size)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, size);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LIFETIME_START;
}

static inline void
gsk_spv_writer_lifetime_stop (GskSpvWriter *writer,
                              GskSpvWriterSection section,
                              guint32 pointer,
                              guint32 size)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, size);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_LIFETIME_STOP;
}

static inline guint32
gsk_spv_writer_group_async_copy (GskSpvWriter *writer,
                                 GskSpvWriterSection section,
                                 GskSlType *result_type,
                                 guint32 execution,
                                 guint32 destination,
                                 guint32 source,
                                 guint32 num_elements,
                                 guint32 stride,
                                 guint32 event)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, destination);
  g_array_append_val (bytes, source);
  g_array_append_val (bytes, num_elements);
  g_array_append_val (bytes, stride);
  g_array_append_val (bytes, event);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_ASYNC_COPY;

  return result_id;
}

static inline void
gsk_spv_writer_group_wait_events (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  guint32 execution,
                                  guint32 num_events,
                                  guint32 events_list)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, num_events);
  g_array_append_val (bytes, events_list);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_WAIT_EVENTS;
}

static inline guint32
gsk_spv_writer_group_all (GskSpvWriter *writer,
                          GskSpvWriterSection section,
                          GskSlType *result_type,
                          guint32 execution,
                          guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_ALL;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_any (GskSpvWriter *writer,
                          GskSpvWriterSection section,
                          GskSlType *result_type,
                          guint32 execution,
                          guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_ANY;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_broadcast (GskSpvWriter *writer,
                                GskSpvWriterSection section,
                                GskSlType *result_type,
                                guint32 execution,
                                guint32 value,
                                guint32 local_id)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, value);
  g_array_append_val (bytes, local_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_BROADCAST;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_i_add (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_I_ADD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_add (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_ADD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_min (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_MIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_u_min (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_U_MIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_s_min (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_S_MIN;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_max (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_MAX;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_u_max (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_U_MAX;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_s_max (GskSpvWriter *writer,
                            GskSpvWriterSection section,
                            GskSlType *result_type,
                            guint32 execution,
                            GskSpvGroupOperation operation,
                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_S_MAX;

  return result_id;
}

static inline guint32
gsk_spv_writer_read_pipe (GskSpvWriter *writer,
                          GskSpvWriterSection section,
                          GskSlType *result_type,
                          guint32 pipe,
                          guint32 pointer,
                          guint32 packet_size,
                          guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_READ_PIPE;

  return result_id;
}

static inline guint32
gsk_spv_writer_write_pipe (GskSpvWriter *writer,
                           GskSpvWriterSection section,
                           GskSlType *result_type,
                           guint32 pipe,
                           guint32 pointer,
                           guint32 packet_size,
                           guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_WRITE_PIPE;

  return result_id;
}

static inline guint32
gsk_spv_writer_reserved_read_pipe (GskSpvWriter *writer,
                                   GskSpvWriterSection section,
                                   GskSlType *result_type,
                                   guint32 pipe,
                                   guint32 reserve_id,
                                   guint32 index,
                                   guint32 pointer,
                                   guint32 packet_size,
                                   guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, index);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RESERVED_READ_PIPE;

  return result_id;
}

static inline guint32
gsk_spv_writer_reserved_write_pipe (GskSpvWriter *writer,
                                    GskSpvWriterSection section,
                                    GskSlType *result_type,
                                    guint32 pipe,
                                    guint32 reserve_id,
                                    guint32 index,
                                    guint32 pointer,
                                    guint32 packet_size,
                                    guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, index);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RESERVED_WRITE_PIPE;

  return result_id;
}

static inline guint32
gsk_spv_writer_reserve_read_pipe_packets (GskSpvWriter *writer,
                                          GskSpvWriterSection section,
                                          GskSlType *result_type,
                                          guint32 pipe,
                                          guint32 num_packets,
                                          guint32 packet_size,
                                          guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, num_packets);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RESERVE_READ_PIPE_PACKETS;

  return result_id;
}

static inline guint32
gsk_spv_writer_reserve_write_pipe_packets (GskSpvWriter *writer,
                                           GskSpvWriterSection section,
                                           GskSlType *result_type,
                                           guint32 pipe,
                                           guint32 num_packets,
                                           guint32 packet_size,
                                           guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, num_packets);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RESERVE_WRITE_PIPE_PACKETS;

  return result_id;
}

static inline void
gsk_spv_writer_commit_read_pipe (GskSpvWriter *writer,
                                 GskSpvWriterSection section,
                                 guint32 pipe,
                                 guint32 reserve_id,
                                 guint32 packet_size,
                                 guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COMMIT_READ_PIPE;
}

static inline void
gsk_spv_writer_commit_write_pipe (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  guint32 pipe,
                                  guint32 reserve_id,
                                  guint32 packet_size,
                                  guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_COMMIT_WRITE_PIPE;
}

static inline guint32
gsk_spv_writer_is_valid_reserve_id (GskSpvWriter *writer,
                                    GskSpvWriterSection section,
                                    GskSlType *result_type,
                                    guint32 reserve_id)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, reserve_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_VALID_RESERVE_ID;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_num_pipe_packets (GskSpvWriter *writer,
                                     GskSpvWriterSection section,
                                     GskSlType *result_type,
                                     guint32 pipe,
                                     guint32 packet_size,
                                     guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_NUM_PIPE_PACKETS;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_max_pipe_packets (GskSpvWriter *writer,
                                     GskSpvWriterSection section,
                                     GskSlType *result_type,
                                     guint32 pipe,
                                     guint32 packet_size,
                                     guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_MAX_PIPE_PACKETS;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_reserve_read_pipe_packets (GskSpvWriter *writer,
                                                GskSpvWriterSection section,
                                                GskSlType *result_type,
                                                guint32 execution,
                                                guint32 pipe,
                                                guint32 num_packets,
                                                guint32 packet_size,
                                                guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, num_packets);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_RESERVE_READ_PIPE_PACKETS;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_reserve_write_pipe_packets (GskSpvWriter *writer,
                                                 GskSpvWriterSection section,
                                                 GskSlType *result_type,
                                                 guint32 execution,
                                                 guint32 pipe,
                                                 guint32 num_packets,
                                                 guint32 packet_size,
                                                 guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, num_packets);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_RESERVE_WRITE_PIPE_PACKETS;

  return result_id;
}

static inline void
gsk_spv_writer_group_commit_read_pipe (GskSpvWriter *writer,
                                       GskSpvWriterSection section,
                                       guint32 execution,
                                       guint32 pipe,
                                       guint32 reserve_id,
                                       guint32 packet_size,
                                       guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_COMMIT_READ_PIPE;
}

static inline void
gsk_spv_writer_group_commit_write_pipe (GskSpvWriter *writer,
                                        GskSpvWriterSection section,
                                        guint32 execution,
                                        guint32 pipe,
                                        guint32 reserve_id,
                                        guint32 packet_size,
                                        guint32 packet_alignment)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, pipe);
  g_array_append_val (bytes, reserve_id);
  g_array_append_val (bytes, packet_size);
  g_array_append_val (bytes, packet_alignment);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_COMMIT_WRITE_PIPE;
}

static inline guint32
gsk_spv_writer_enqueue_marker (GskSpvWriter *writer,
                               GskSpvWriterSection section,
                               GskSlType *result_type,
                               guint32 queue,
                               guint32 num_events,
                               guint32 wait_events,
                               guint32 ret_event)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, queue);
  g_array_append_val (bytes, num_events);
  g_array_append_val (bytes, wait_events);
  g_array_append_val (bytes, ret_event);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ENQUEUE_MARKER;

  return result_id;
}

static inline guint32
gsk_spv_writer_enqueue_kernel (GskSpvWriter *writer,
                               GskSpvWriterSection section,
                               GskSlType *result_type,
                               guint32 queue,
                               guint32 flags,
                               guint32 nd_range,
                               guint32 num_events,
                               guint32 wait_events,
                               guint32 ret_event,
                               guint32 invoke,
                               guint32 param,
                               guint32 param_size,
                               guint32 param_align,
                               guint32 *local_sizes,
                               gsize n_local_sizes)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, queue);
  g_array_append_val (bytes, flags);
  g_array_append_val (bytes, nd_range);
  g_array_append_val (bytes, num_events);
  g_array_append_val (bytes, wait_events);
  g_array_append_val (bytes, ret_event);
  g_array_append_val (bytes, invoke);
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, param_size);
  g_array_append_val (bytes, param_align);
  g_array_append_vals (bytes, local_sizes, n_local_sizes);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ENQUEUE_KERNEL;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_kernel_n_drange_sub_group_count (GskSpvWriter *writer,
                                                    GskSpvWriterSection section,
                                                    GskSlType *result_type,
                                                    guint32 nd_range,
                                                    guint32 invoke,
                                                    guint32 param,
                                                    guint32 param_size,
                                                    guint32 param_align)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, nd_range);
  g_array_append_val (bytes, invoke);
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, param_size);
  g_array_append_val (bytes, param_align);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_KERNEL_N_DRANGE_SUB_GROUP_COUNT;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_kernel_n_drange_max_sub_group_size (GskSpvWriter *writer,
                                                       GskSpvWriterSection section,
                                                       GskSlType *result_type,
                                                       guint32 nd_range,
                                                       guint32 invoke,
                                                       guint32 param,
                                                       guint32 param_size,
                                                       guint32 param_align)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, nd_range);
  g_array_append_val (bytes, invoke);
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, param_size);
  g_array_append_val (bytes, param_align);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_KERNEL_N_DRANGE_MAX_SUB_GROUP_SIZE;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_kernel_work_group_size (GskSpvWriter *writer,
                                           GskSpvWriterSection section,
                                           GskSlType *result_type,
                                           guint32 invoke,
                                           guint32 param,
                                           guint32 param_size,
                                           guint32 param_align)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, invoke);
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, param_size);
  g_array_append_val (bytes, param_align);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_KERNEL_WORK_GROUP_SIZE;

  return result_id;
}

static inline guint32
gsk_spv_writer_get_kernel_preferred_work_group_size_multiple (GskSpvWriter *writer,
                                                              GskSpvWriterSection section,
                                                              GskSlType *result_type,
                                                              guint32 invoke,
                                                              guint32 param,
                                                              guint32 param_size,
                                                              guint32 param_align)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, invoke);
  g_array_append_val (bytes, param);
  g_array_append_val (bytes, param_size);
  g_array_append_val (bytes, param_align);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE;

  return result_id;
}

static inline void
gsk_spv_writer_retain_event (GskSpvWriter *writer,
                             GskSpvWriterSection section,
                             guint32 event)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, event);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RETAIN_EVENT;
}

static inline void
gsk_spv_writer_release_event (GskSpvWriter *writer,
                              GskSpvWriterSection section,
                              guint32 event)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, event);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_RELEASE_EVENT;
}

static inline guint32
gsk_spv_writer_create_user_event (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CREATE_USER_EVENT;

  return result_id;
}

static inline guint32
gsk_spv_writer_is_valid_event (GskSpvWriter *writer,
                               GskSpvWriterSection section,
                               GskSlType *result_type,
                               guint32 event)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, event);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IS_VALID_EVENT;

  return result_id;
}

static inline void
gsk_spv_writer_set_user_event_status (GskSpvWriter *writer,
                                      GskSpvWriterSection section,
                                      guint32 event,
                                      guint32 status)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, event);
  g_array_append_val (bytes, status);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SET_USER_EVENT_STATUS;
}

static inline void
gsk_spv_writer_capture_event_profiling_info (GskSpvWriter *writer,
                                             GskSpvWriterSection section,
                                             guint32 event,
                                             guint32 profiling_info,
                                             guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, event);
  g_array_append_val (bytes, profiling_info);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_CAPTURE_EVENT_PROFILING_INFO;
}

static inline guint32
gsk_spv_writer_get_default_queue (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  GskSlType *result_type)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GET_DEFAULT_QUEUE;

  return result_id;
}

static inline guint32
gsk_spv_writer_build_nd_range (GskSpvWriter *writer,
                               GskSpvWriterSection section,
                               GskSlType *result_type,
                               guint32 global_work_size,
                               guint32 local_work_size,
                               guint32 global_work_offset)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, global_work_size);
  g_array_append_val (bytes, local_work_size);
  g_array_append_val (bytes, global_work_offset);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_BUILD_ND_RANGE;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_implicit_lod (GskSpvWriter *writer,
                                                 GskSpvWriterSection section,
                                                 GskSlType *result_type,
                                                 guint32 sampled_image,
                                                 guint32 coordinate,
                                                 GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_explicit_lod (GskSpvWriter *writer,
                                                 GskSpvWriterSection section,
                                                 GskSlType *result_type,
                                                 guint32 sampled_image,
                                                 guint32 coordinate,
                                                 GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_dref_implicit_lod (GskSpvWriter *writer,
                                                      GskSpvWriterSection section,
                                                      GskSlType *result_type,
                                                      guint32 sampled_image,
                                                      guint32 coordinate,
                                                      guint32 d_ref_,
                                                      GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_DREF_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_dref_explicit_lod (GskSpvWriter *writer,
                                                      GskSpvWriterSection section,
                                                      GskSlType *result_type,
                                                      guint32 sampled_image,
                                                      guint32 coordinate,
                                                      guint32 d_ref_,
                                                      GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_DREF_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_proj_implicit_lod (GskSpvWriter *writer,
                                                      GskSpvWriterSection section,
                                                      GskSlType *result_type,
                                                      guint32 sampled_image,
                                                      guint32 coordinate,
                                                      GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_proj_explicit_lod (GskSpvWriter *writer,
                                                      GskSpvWriterSection section,
                                                      GskSlType *result_type,
                                                      guint32 sampled_image,
                                                      guint32 coordinate,
                                                      GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_proj_dref_implicit_lod (GskSpvWriter *writer,
                                                           GskSpvWriterSection section,
                                                           GskSlType *result_type,
                                                           guint32 sampled_image,
                                                           guint32 coordinate,
                                                           guint32 d_ref_,
                                                           GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_DREF_IMPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_sample_proj_dref_explicit_lod (GskSpvWriter *writer,
                                                           GskSpvWriterSection section,
                                                           GskSlType *result_type,
                                                           guint32 sampled_image,
                                                           guint32 coordinate,
                                                           guint32 d_ref_,
                                                           GskSpvImageOperands image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  g_array_append_val (bytes, (guint32) { image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_DREF_EXPLICIT_LOD;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_fetch (GskSpvWriter *writer,
                                   GskSpvWriterSection section,
                                   GskSlType *result_type,
                                   guint32 image,
                                   guint32 coordinate,
                                   GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_FETCH;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_gather (GskSpvWriter *writer,
                                    GskSpvWriterSection section,
                                    GskSlType *result_type,
                                    guint32 sampled_image,
                                    guint32 coordinate,
                                    guint32 component,
                                    GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, component);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_GATHER;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_dref_gather (GskSpvWriter *writer,
                                         GskSpvWriterSection section,
                                         GskSlType *result_type,
                                         guint32 sampled_image,
                                         guint32 coordinate,
                                         guint32 d_ref_,
                                         GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, sampled_image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, d_ref_);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_DREF_GATHER;

  return result_id;
}

static inline guint32
gsk_spv_writer_image_sparse_texels_resident (GskSpvWriter *writer,
                                             GskSpvWriterSection section,
                                             GskSlType *result_type,
                                             guint32 resident_code)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, resident_code);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_TEXELS_RESIDENT;

  return result_id;
}

static inline void
gsk_spv_writer_no_line (GskSpvWriter *writer,
                        GskSpvWriterSection section)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_NO_LINE;
}

static inline guint32
gsk_spv_writer_atomic_flag_test_and_set (GskSpvWriter *writer,
                                         GskSpvWriterSection section,
                                         GskSlType *result_type,
                                         guint32 pointer,
                                         guint32 scope,
                                         guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_FLAG_TEST_AND_SET;

  return result_id;
}

static inline void
gsk_spv_writer_atomic_flag_clear (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  guint32 pointer,
                                  guint32 scope,
                                  guint32 semantics)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, pointer);
  g_array_append_val (bytes, scope);
  g_array_append_val (bytes, semantics);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_ATOMIC_FLAG_CLEAR;
}

static inline guint32
gsk_spv_writer_image_sparse_read (GskSpvWriter *writer,
                                  GskSpvWriterSection section,
                                  GskSlType *result_type,
                                  guint32 image,
                                  guint32 coordinate,
                                  GskSpvImageOperands opt_image_operands)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  if (opt_image_operands != 0)
    g_array_append_val (bytes, (guint32) { opt_image_operands });
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_IMAGE_SPARSE_READ;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_ballot_khr (GskSpvWriter *writer,
                                    GskSpvWriterSection section,
                                    GskSlType *result_type,
                                    guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_BALLOT_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_first_invocation_khr (GskSpvWriter *writer,
                                              GskSpvWriterSection section,
                                              GskSlType *result_type,
                                              guint32 value)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, value);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_FIRST_INVOCATION_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_all_khr (GskSpvWriter *writer,
                                 GskSpvWriterSection section,
                                 GskSlType *result_type,
                                 guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_ALL_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_any_khr (GskSpvWriter *writer,
                                 GskSpvWriterSection section,
                                 GskSlType *result_type,
                                 guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_ANY_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_all_equal_khr (GskSpvWriter *writer,
                                       GskSpvWriterSection section,
                                       GskSlType *result_type,
                                       guint32 predicate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, predicate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_ALL_EQUAL_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_subgroup_read_invocation_khr (GskSpvWriter *writer,
                                             GskSpvWriterSection section,
                                             GskSlType *result_type,
                                             guint32 value,
                                             guint32 index)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, value);
  g_array_append_val (bytes, index);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_SUBGROUP_READ_INVOCATION_KHR;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_i_add_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_I_ADD_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_add_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_ADD_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_min_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_MIN_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_u_min_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_U_MIN_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_s_min_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_S_MIN_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_f_max_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_F_MAX_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_u_max_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_U_MAX_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_group_s_max_non_uniform_amd (GskSpvWriter *writer,
                                            GskSpvWriterSection section,
                                            GskSlType *result_type,
                                            guint32 execution,
                                            GskSpvGroupOperation operation,
                                            guint32 x)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, execution);
  g_array_append_val (bytes, (guint32) { operation });
  g_array_append_val (bytes, x);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_GROUP_S_MAX_NON_UNIFORM_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_fragment_mask_fetch_amd (GskSpvWriter *writer,
                                        GskSpvWriterSection section,
                                        GskSlType *result_type,
                                        guint32 image,
                                        guint32 coordinate)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FRAGMENT_MASK_FETCH_AMD;

  return result_id;
}

static inline guint32
gsk_spv_writer_fragment_fetch_amd (GskSpvWriter *writer,
                                   GskSpvWriterSection section,
                                   GskSlType *result_type,
                                   guint32 image,
                                   guint32 coordinate,
                                   guint32 fragment_index)
{
  GArray *bytes = gsk_spv_writer_get_bytes (writer, section);
  guint32 result_type_id = gsk_spv_writer_get_id_for_type (writer, result_type);
  guint32 result_id = gsk_spv_writer_make_id (writer);
  guint start_index = bytes->len;

  g_array_append_val (bytes, (guint32) { 0 });
  g_array_append_val (bytes, result_type_id);
  g_array_append_val (bytes, result_id);
  g_array_append_val (bytes, image);
  g_array_append_val (bytes, coordinate);
  g_array_append_val (bytes, fragment_index);
  g_array_index (bytes, guint32, start_index) = (bytes->len - start_index) << 16 | GSK_SPV_OP_FRAGMENT_FETCH_AMD;

  return result_id;
}

